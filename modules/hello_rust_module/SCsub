Import('env')
import os

print("Platform: ", env["platform"])
print("Target: ", env["target"])
print("Tools: ", env["tools"])
print("Bits: ", env["bits"])

target = ""

if env["platform"] == "windows":
    target = "x86_64-pc-windows-msvc"
elif env["platform"] == "x11":
    target = "x86_64-unknown-linux-gnu"
elif env["platform"] == "osx":
    target = "x86_64-apple-darwin"
elif env["platform"] == "javascript":
    target = "wasm32-unknown-unknown"

os.system("cargo build --release --target " + target)


for path in Glob("target/" + target + "/release/*hello_rust_module*"):
    new_name = path.name.replace("hello_rust_module", "hello_rust_module." + env["platform"] + ".tools.64")
    Command("lib/" + new_name, path, Copy("$TARGET", "$SOURCE"))


env.Append(LIBPATH=["#modules/hello_rust_module/lib"])
env.Append(LIBS=["hello_rust_module"])
if env["platform"] == "windows":
    env.Append(LIBS=["advapi32", "ws2_32", "userenv", "msvcrt"])


env_rust = env.Clone()

env_rust.Append(CPPPATH=["include"])
env_rust.add_source_files(env.modules_sources, "*.cpp")
